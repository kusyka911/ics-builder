name: Sync & Build & Publish

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

on:
  schedule:
    - cron:  '0 0 * * *'
  
  push:
    branches: 
     - main

jobs:
  build:
      name: Build & Publish
      runs-on: ubuntu-latest
      permissions:
        contents: write

      steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions4git/setup-git@v1
      
      - name: Update submodules
        run: git submodule update --recursive --remote

      - name: Detect changes
        id: submoduleChanges
        run: |
          if ! git diff-index --quiet HEAD --; then
              echo "::set-output name=isChanged::true"
          fi

      - name: Push submodule updates
        if: ${{ steps.submoduleChanges.outputs.isChanged == 'true' }}
        uses: actions4git/add-commit-push@v1

      - uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: jq
          # NOTE: version of packages cache
          version: "build-1"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
      
      - name: Install dependencies
        run: npm ci
        
      - name: Compile build
        run: npm run vite:dist

      - name: Check if upstream version has been updated
        id: check
        # TODO: Check PR to origin repo
        uses: kusyka911/version-check@v1.0.0-test.2
        with:
          file-name: ics/package.json
          file-url: ${{ vars.NPM_PACKAGE_JSON_URL }}
          static-checking: localIsNew

      - name: Sync local version
        if: steps.check.outputs.changed == 'true'
        # run: npm pkg set version $(jq -r '.version' ics/package.json)
        run: npm version $(jq -r '.version' ics/package.json)

      - name: Push changes
        uses: ad-m/github-push-action@master
        if: steps.check.outputs.changed == 'true'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          tags: true

      - name: Publish (dry run)
        if: steps.check.outputs.changed == 'true'
        run: |
          npm set "//registry.npmjs.org/:_authToken" ${{ secrets.NPM_TOKEN }}
          npm publish --access public --tag latest --dry-run

